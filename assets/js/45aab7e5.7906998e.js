"use strict";(self.webpackChunkwebsitev_3=self.webpackChunkwebsitev_3||[]).push([[4499],{4962:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"2.x","label":"2.x","banner":"unmaintained","badge":true,"className":"docs-version-2.x","isLast":false,"docsSidebars":{"version-2.x/tutorialSidebar":[{"type":"category","label":"Getting started","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Installation","href":"/docs/2.x/getting-started/installation","docId":"getting-started/installation"},{"type":"link","label":"Learn the basics","href":"/docs/2.x/getting-started/basics","docId":"getting-started/basics"},{"type":"link","label":"Project structure","href":"/docs/2.x/getting-started/structure","docId":"getting-started/structure"},{"type":"link","label":"Deploying","href":"/docs/2.x/getting-started/deploying","docId":"getting-started/deploying"},{"type":"link","label":"CLI","href":"/docs/2.x/getting-started/cli","docId":"getting-started/cli"},{"type":"link","label":"Database","href":"/docs/2.x/getting-started/database","docId":"getting-started/database"}]},{"type":"category","label":"Basics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Schema","href":"/docs/2.x/basics/schema","docId":"basics/schema"},{"type":"link","label":"Models","href":"/docs/2.x/basics/models","docId":"basics/models"},{"type":"link","label":"Resolvers","href":"/docs/2.x/basics/resolvers","docId":"basics/resolvers"},{"type":"link","label":"Collections","href":"/docs/2.x/basics/collections","docId":"basics/collections"},{"type":"link","label":"Jobs","href":"/docs/2.x/basics/jobs","docId":"basics/jobs"}]},{"type":"category","label":"Modules","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Authentication","href":"/docs/2.x/modules/authentication","docId":"modules/authentication"},{"type":"link","label":"GraphQL","href":"/docs/2.x/modules/graphql","docId":"modules/graphql"},{"type":"link","label":"HTTP","href":"/docs/2.x/modules/http","docId":"modules/http"},{"type":"link","label":"Files","href":"/docs/2.x/modules/files","docId":"modules/files"},{"type":"link","label":"Mailing","href":"/docs/2.x/modules/mailing","docId":"modules/mailing"},{"type":"link","label":"Autoform","href":"/docs/2.x/modules/autoform","docId":"modules/autoform"},{"type":"link","label":"Echoes","href":"/docs/2.x/modules/echoes","docId":"modules/echoes"},{"type":"link","label":"Services","href":"/docs/2.x/modules/services","docId":"modules/services"}]}]},"docs":{"basics/collections":{"id":"basics/collections","title":"Collections","description":"Orionjs is made to work with MongoDB de default. To connect to MongoDB and execute queries you must create Collections.","sidebar":"version-2.x/tutorialSidebar"},"basics/jobs":{"id":"basics/jobs","title":"Jobs","description":"Jobs are pre-programmed background processes that can be scheduled to run after a certain period of time.","sidebar":"version-2.x/tutorialSidebar"},"basics/models":{"id":"basics/models","title":"Models","description":"Create a model","sidebar":"version-2.x/tutorialSidebar"},"basics/resolvers":{"id":"basics/resolvers","title":"Resolvers","description":"Resolvers in Orionjs are the controllers or main functions to execute routines, query the database and return data with defined structures. These are divided into two large types of resolvers, the resolvers of the application and the resolvers of models. In the case of the resolvers of the application are generally defined to return data with the structures of the database, and the resolvers of models return dynamic information, generally not defined in the schemas of the application.","sidebar":"version-2.x/tutorialSidebar"},"basics/schema":{"id":"basics/schema","title":"Schema","description":"Orionjs schema has two main purposes. First, it describes the structure of each Model, which will set","sidebar":"version-2.x/tutorialSidebar"},"getting-started/basics":{"id":"getting-started/basics","title":"Learn the basics","description":"Orionjs consists basically in controllers (resolvers) and models.","sidebar":"version-2.x/tutorialSidebar"},"getting-started/cli":{"id":"getting-started/cli","title":"CLI","description":"The cli is a module that will help you creating, running, and building your Orionjs app.","sidebar":"version-2.x/tutorialSidebar"},"getting-started/database":{"id":"getting-started/database","title":"Database","description":"By default Orionjs creates a MongoDB instace locally in mongodb3001/orionlocal, you can overwrite a MONGO_URL environment variable in start.sh.","sidebar":"version-2.x/tutorialSidebar"},"getting-started/deploying":{"id":"getting-started/deploying","title":"Deploying","description":"Building","sidebar":"version-2.x/tutorialSidebar"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"This page will help you install and build your first Orionjs project. If you already have Orionjs installed, you can skip this page.","sidebar":"version-2.x/tutorialSidebar"},"getting-started/structure":{"id":"getting-started/structure","title":"Project structure","description":"After downloading the starter kit you will see two main folders in your project.","sidebar":"version-2.x/tutorialSidebar"},"modules/authentication":{"id":"modules/authentication","title":"Authentication","description":"Two factor authentication","sidebar":"version-2.x/tutorialSidebar"},"modules/autoform":{"id":"modules/autoform","title":"Autoform","description":"Autoform is an Orionjs package, available to import in any React project and usable as a React Component. It allows to specify the name of a mutation as a prop and automatically setting a form for it, allowing faster developing.","sidebar":"version-2.x/tutorialSidebar"},"modules/echoes":{"id":"modules/echoes","title":"Echoes","description":"Echoes is an abstraction of kafkajs. It can be used as a standalone package without installing other orionjs packages.","sidebar":"version-2.x/tutorialSidebar"},"modules/files":{"id":"modules/files","title":"Files","description":"Initializing","sidebar":"version-2.x/tutorialSidebar"},"modules/graphql":{"id":"modules/graphql","title":"GraphQL","description":"Orionjs is deeply integrated with GraphQL. It generates automatically the schemas and all boilerplate code. It supports subscriptions over websockets and uses Apollo Server. It only requires few lines of configuration to get started.","sidebar":"version-2.x/tutorialSidebar"},"modules/http":{"id":"modules/http","title":"HTTP","description":"Orionjs comes with a http module, powered by micro.","sidebar":"version-2.x/tutorialSidebar"},"modules/mailing":{"id":"modules/mailing","title":"Mailing","description":"The mailing package helps you sending emails in your app.","sidebar":"version-2.x/tutorialSidebar"},"modules/services":{"id":"modules/services","title":"Services","description":"Orionjs services is a layer of typedi. It can be used as a standalone package without installing other orionjs packages.","sidebar":"version-2.x/tutorialSidebar"}}}')}}]);