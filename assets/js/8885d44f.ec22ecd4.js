"use strict";(self.webpackChunkwebsitev_3=self.webpackChunkwebsitev_3||[]).push([[3394],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,a,o=function(e,n){if(null==e)return{};var t,a,o={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=a.createContext({}),c=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},u=function(e){var n=c(e.components);return a.createElement(s.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},p=a.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=c(t),m=o,f=p["".concat(s,".").concat(m)]||p[m]||d[m]||l;return t?a.createElement(f,r(r({ref:n},u),{},{components:t})):a.createElement(f,r({ref:n},u))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,r=new Array(l);r[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:o,r[1]=i;for(var c=2;c<l;c++)r[c]=t[c];return a.createElement.apply(null,r)}return a.createElement.apply(null,t)}p.displayName="MDXCreateElement"},8215:function(e,n,t){t.d(n,{Z:function(){return o}});var a=t(7294);function o(e){var n=e.children,t=e.hidden,o=e.className;return a.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},9877:function(e,n,t){t.d(n,{Z:function(){return u}});var a=t(7462),o=t(7294),l=t(2389),r=t(5979),i=t(6010),s="tabItem_LplD";function c(e){var n,t,l,c=e.lazy,u=e.block,d=e.defaultValue,p=e.values,m=e.groupId,f=e.className,g=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=p?p:g.map((function(e){var n=e.props;return{value:n.value,label:n.label,attributes:n.attributes}})),k=(0,r.lx)(h,(function(e,n){return e.value===n.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===d?d:null!=(n=null!=d?d:null==(t=g.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(l=g[0])?void 0:l.props.value;if(null!==b&&!h.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var v=(0,r.UB)(),y=v.tabGroupChoices,N=v.setTabGroupChoices,w=(0,o.useState)(b),C=w[0],O=w[1],j=[],T=(0,r.o5)().blockElementScrollPositionUntilNextRender;if(null!=m){var D=y[m];null!=D&&D!==C&&h.some((function(e){return e.value===D}))&&O(D)}var x=function(e){var n=e.currentTarget,t=j.indexOf(n),a=h[t].value;a!==C&&(T(n),O(a),null!=m&&N(m,a))},M=function(e){var n,t=null;switch(e.key){case"ArrowRight":var a=j.indexOf(e.currentTarget)+1;t=j[a]||j[0];break;case"ArrowLeft":var o=j.indexOf(e.currentTarget)-1;t=j[o]||j[j.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":u},f)},h.map((function(e){var n=e.value,t=e.label,l=e.attributes;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:C===n?0:-1,"aria-selected":C===n,key:n,ref:function(e){return j.push(e)},onKeyDown:M,onFocus:x,onClick:x},l,{className:(0,i.Z)("tabs__item",s,null==l?void 0:l.className,{"tabs__item--active":C===n})}),null!=t?t:n)}))),c?(0,o.cloneElement)(g.filter((function(e){return e.props.value===C}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},g.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==C})}))))}function u(e){var n=(0,l.Z)();return o.createElement(c,(0,a.Z)({key:String(n)},e))}},3384:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return u},default:function(){return g},frontMatter:function(){return c},metadata:function(){return d},toc:function(){return m}});var a=t(7462),o=t(3366),l=(t(7294),t(3905)),r=t(9877),i=t(8215),s=["components"],c={id:"collections",title:"Collections",sidebar_label:"Collections",sidebar_position:4},u=void 0,d={unversionedId:"basics/collections",id:"basics/collections",title:"Collections",description:"Currently OrionJS only has support for connecting to and running queries against MongoDB.",source:"@site/docs/basics/collections.md",sourceDirName:"basics",slug:"/basics/collections",permalink:"/docs/basics/collections",editUrl:"https://github.com/facebook/docusaurus/edit/main/website/docs/basics/collections.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{id:"collections",title:"Collections",sidebar_label:"Collections",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Resolvers",permalink:"/docs/basics/resolvers"},next:{title:"Jobs",permalink:"/docs/basics/jobs"}},p={},m=[{value:"Configure Database",id:"configure-database",level:2},{value:"Install package",id:"install-package",level:2},{value:"Proposed structure",id:"proposed-structure",level:3},{value:"Create a collection",id:"create-a-collection",level:2},{value:"Methods",id:"methods",level:2},{value:"Find one",id:"find-one",level:3},{value:"Find",id:"find",level:3},{value:"Insert One",id:"insert-one",level:3},{value:"Insert Many",id:"insert-many",level:3},{value:"Update One",id:"update-one",level:3},{value:"Update Many",id:"update-many",level:3},{value:"Delete One",id:"delete-one",level:3},{value:"Delete Many",id:"delete-many",level:3},{value:"Aggregate",id:"aggregate",level:3},{value:"Connecting to multiple databases",id:"connecting-to-multiple-databases",level:2},{value:"Example",id:"example",level:3},{value:"Using MongoDB node API",id:"using-mongodb-node-api",level:2}],f={toc:m};function g(e){var n=e.components,t=(0,o.Z)(e,s);return(0,l.kt)("wrapper",(0,a.Z)({},f,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Currently OrionJS only has support for connecting to and running queries against MongoDB."),(0,l.kt)("h2",{id:"configure-database"},"Configure Database"),(0,l.kt)("p",null,"To continue, you need to have the database configured, ",(0,l.kt)("a",{parentName:"p",href:"/docs/getting-started/database"},"see more Database"),"."),(0,l.kt)("h2",{id:"install-package"},"Install package"),(0,l.kt)(r.Z,{groupId:"npm2yarn",mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"npm",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"npm install @orion-js/mongodb\n"))),(0,l.kt)(i.Z,{value:"yarn",label:"Yarn",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"yarn add @orion-js/mongodb\n")))),(0,l.kt)("h3",{id:"proposed-structure"},"Proposed structure"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"app\n\u2514\u2500\u2500 collections\n    \u2514\u2500\u2500 Collection1\n        \u2514\u2500\u2500 index.ts\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"collections"),": The directory of the set of collections."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"Collection1"),": Represents the collection use to manage its respective documents.")),(0,l.kt)("h2",{id:"create-a-collection"},"Create a collection"),(0,l.kt)("p",null,"By convention collections are created in the ",(0,l.kt)("inlineCode",{parentName:"p"},"app/collections")," folder, but you can create a collection anywhere."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app/collections/Counters/index.ts"',title:'"app/collections/Counters/index.ts"'},"import {createCollection} from '@orion-js/mongodb'\nimport Counter from 'app/models/Counter'\n\nexport default createCollection<Counter>({\n  name: 'counters',\n  model: Counter,\n  indexes: [\n    {\n      keys: {\n        name: 1\n      },\n      options: {\n        unique: true\n      }\n    }\n  ]\n})\n")),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"name"),": The name of the collection in MongoDB."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"model?"),": A model assigned to the collection. The schema of the model will be used to validate inserts and updates into the collection, and it will be initialized when using find methods."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"indexes?"),": An array of indexes for this collection. Each item will be passed to the ",(0,l.kt)("inlineCode",{parentName:"li"},"collection.createIndex(keys, options)")," function from MongoDB.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"keys"),": An object containing the keys."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"options")," An object with the options of the index."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"idGeneration?"),": An string, use ",(0,l.kt)("a",{parentName:"li",href:"https://www.mongodb.com/docs/manual/reference/method/ObjectId/"},"Mongo ObjectID")," or one by Orion: ",(0,l.kt)("inlineCode",{parentName:"li"},"mongo"),"|",(0,l.kt)("inlineCode",{parentName:"li"},"random"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"connectionName?"),": Specify another database connection (",(0,l.kt)("a",{parentName:"li",href:"#connecting-to-multiple-databases"},"see more"),").")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"methods"},"Methods"),(0,l.kt)("p",null,"The Orionjs collection API is an abstraction of the ",(0,l.kt)("a",{parentName:"p",href:"https://www.mongodb.com/docs/drivers/node/current/"},"Nodejs MongoDB Driver"),"."),(0,l.kt)("p",null,"It has the following methods:"),(0,l.kt)("h3",{id:"find-one"},"Find one"),(0,l.kt)("p",null,"Returns a document initializing it with the passed model."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const item = await collection.findOne(selector)\n")),(0,l.kt)("h3",{id:"find"},"Find"),(0,l.kt)("p",null,"Returns a MongoDB cursor."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const cursor = collection.find(selector)\ncursor.sort({date: -1})\n")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"toArray()")," function of the cursor will initialize all the items with the passed model."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const items = await collection.find(selector).toArray()\nconst count = await collection.find(selector).count()\n")),(0,l.kt)("h3",{id:"insert-one"},"Insert One"),(0,l.kt)("p",null,"Inserts documents to the DB. Each document will be cleaned and verified using the passed model's schema."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const docId = await collection.insertOne(document)\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," A String containing ",(0,l.kt)("inlineCode",{parentName:"p"},"_id")," of the inserted item."),(0,l.kt)("h3",{id:"insert-many"},"Insert Many"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const docsIds = await collection.insertMany([document1, document2])\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns:")," A Array of Strings containing ",(0,l.kt)("inlineCode",{parentName:"p"},"_id")," of the inserted items."),(0,l.kt)("h3",{id:"update-one"},"Update One"),(0,l.kt)("p",null,"Updates documents in the DB. The changes will be verified using the passed model's schema. The fields that are not changed will not be verified."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"await updateOne(selector, modifier)\n")),(0,l.kt)("h3",{id:"update-many"},"Update Many"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"await updateMany(selector, modifier)\n")),(0,l.kt)("h3",{id:"delete-one"},"Delete One"),(0,l.kt)("p",null,"Delete one document."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"await deleteOne(selector)\n")),(0,l.kt)("h3",{id:"delete-many"},"Delete Many"),(0,l.kt)("p",null,"Deletes many documents."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"await deleteMany(selector)\n")),(0,l.kt)("h3",{id:"aggregate"},"Aggregate"),(0,l.kt)("p",null,"Returns a MongoDB cursor using the MongoDB aggregate function. This will not initialize items when returning."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"const result = await collection.aggregate(pipeline).toArray()\n")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"connecting-to-multiple-databases"},"Connecting to multiple databases"),(0,l.kt)("p",null,"You can specify another database connection when initializing a collection. To connect to other database use ",(0,l.kt)("inlineCode",{parentName:"p"},"connectionName")," property."),(0,l.kt)("p",null,"To establish the connection, need to define in your ",(0,l.kt)("inlineCode",{parentName:"p"},".env")," file the environment variable ",(0,l.kt)("inlineCode",{parentName:"p"},"MONGO_URL_ + connectionName")," (in uppercase), as in the following example."),(0,l.kt)("h3",{id:"example"},"Example"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title=".env"',title:'".env"'},"...\nMONGO_URL_OTHER=mongodb://localhost:3003/other-typescript-starter\n...\n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:'title="app/collections/Users/index.ts"',title:'"app/collections/Users/index.ts"'},"import {createCollection} from '@orion-js/mongodb'\nimport User from 'app/models/User'\n\nexport default createCollection<User>({\n  name: 'users',\n  model: User,\n  connectionName: 'other',\n  indexes: []\n})\n")),(0,l.kt)("p",null,"This will establish the connection between the name defined in ",(0,l.kt)("inlineCode",{parentName:"p"},"connectionName")," and the environment variable defined ",(0,l.kt)("inlineCode",{parentName:"p"},"MONGO_URL_+connectionName.toUpperCase()")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"using-mongodb-node-api"},"Using MongoDB node API"),(0,l.kt)("p",null,"If you need to use the native MongoDB collection api you can get it from the ",(0,l.kt)("inlineCode",{parentName:"p"},"rawCollection")," variable of the collection."))}g.isMDXComponent=!0}}]);